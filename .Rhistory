install.packages("tidyverse")
package.install("googledrive")
install.packages("googledrive")
install.packages("httr")
install.packages("curl")
install.packages("tidyverse")
ls
clear
a<-[3 7 9]
a<-c(3,7,9)
a * 7
a * a
a.a
a / a
a * 8
b<-a*7
b
b * a
install.packages("tidyverse")
exit
t.test
a
t.test(a,b)
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy))
library(tidyverse)
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy))
ggplot(data=mpg)
+ geom_point(mapping=aes(x=hwy, y=cyl))
ggplot(data=mpg) + geom_point(mapping=aes(x=hwy, y=cyl))
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy, color=class))
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy, size=class))
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy, alpha=class))
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy, size=class))
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy), color='blue')
ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy), color='blue') + facet_wrap(~ class , nrow = 2)
ggplot(data = mpg) +
geom_smooth(mapping=aes(x=displ, y=hwy))
geom_smooth(mapping=aes(x=displ, y=hwy, linetype = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping=aes(x=cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x=cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = stat(prop), group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = mpg, mapping=aes(x=class, y=hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping=aes(x=class, y=hwy)) +
geom_boxplot() + coord_flip()
library(nycflights13)
flights
head(flights)
filter(flights, month==1, day==1)
df<-tibble(x=c(1,NA,3))
df
filter(df, x>1)
filter(df, is.na(x))
filter(df, !is.na(x))
arrange(flights, year, month, day)
select(flights, year, month, day)
select(flights, year:day)
select(flights, -(year:day))
?select
select(flights, starts_with("d"))
View()
View(flights)
flights_sml <- select(flights, year:day, ends_with("delay"), distance, air_time)
flights_sml
mutate(flights_sml, gain=dep_delay-arr_delay, speed = distance / air_time * 60)
colnames(flights)
mutate(flights_sml, gain = dep_delay - arr_delay, hours = air_time / 60, gain_per_hour = gain / hours)
colnames(flights_sml)
transmute(flights, gain = dep_delay - arr_delay, hours = air_time / 60, gain_per_hour = gain/hours)
summarise(flights, delay=mean(dep_delay, na.rm=TRUE))
by_day<-group_by(flights, year, month, day)
summarise(by_day, delay=mean(dep_delay, na.rm=TRUE))
by_day
summarise(by_day, delay=mean(dep_delay, na.rm=TRUE))
by_year<-group_by(flights, year)
summarise(by_year, delay=mean(dep_delay, na.rm=TRUE))
by_month<-group_by(flights, month)
summarise(by_month, delay=mean(dep_delay, na.rm=TRUE))
delays<-flights %>% group_by(dest) %>% summarise()
delays<-flights %>% group_by(dest) %>% summarise(
count = n(),
dist = mean(distance, na.rm=TRUE),
delay = mean(arr_delay, na.rm=TRUE)
) %>%
filter(count>20, dest!="HNL")
summarise()
`summarise()`
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
#> `summarise()` ungrouping output (override with `.groups` argument)
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays
delays %>% filter(n>25)%>% ggplot(mapping=aes(x=n, y=delay))+geom_point(alpha = 1/10)
delays %>% filter(n>25) %>% ggplot(mapping=aes(x=n, y=delay))+geom_point(alpha = 1/10)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
delays
delays %>% filter(n > 25)
delays %>% filter(count > 25)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
setwd("~/Documents/DS160/r_examples")
df2<-read.csv("penguins_lter.csv")
colnames(df2)
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
library(tidyverse)
df<-read.csv("penguins_size.csv")
head(df)
df[c('species', 'sex')]
df[0:2,3:5]
FEMALE<-df[which (df$sex=='FEMALE'),]
MALE<-df[which (df$sex=='MALE'),]
nrow(df)
summary(df)
mean(df$body_mass_g, na.rm = TRUE)
colMeans(df, na.rm=TRUE)
colMeans(df[sapply(df, is.numeric)],na.rm=TRUE)
sd(df$body_mass_g, na.rm=TRUE)
var(df$body_mass_g, na.rm=TRUE)
tail(df)
sample_n(df, size=10)
df %>% group_by(species) %>%
count()
df2<-read.csv("penguins_lter.csv")
colnames(df2)
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
column_names
colnames(df2)<-column_names
colnames(df2)
df2$species
df2<-df2 %>% separate(species, c("species","1","2","3"))
df2<-df2[-c(3,4,5)]
colnames(df2)
df2$species
str(df2)
#Convert date
df2$date_egg<-as.POSIXct.Date()
#Convert date
df2$date_egg<-as.POSIXct(df2$date_egg, format='%m-%d-%Y')
df2$date_egg
df2<-read.csv("penguins_lter.csv")
colnames(df2) # Drop columns
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
column_names
colnames(df2)<-column_names #rename columns
colnames(df2)
df2$species
#str_split(df2$species, " ")
#Split the column
df2<-df2 %>% separate(species, c("species","1","2","3"))
df2<-df2[-c(3,4,5)]
colnames(df2)
#Check Data Types
str(df2)
#Convert date
df2$date_egg<-as.POSIXct(df2$date_egg, format='%m-%d-%Y')
df2<-read.csv("penguins_lter.csv")
colnames(df2) # Drop columns
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
column_names
colnames(df2)<-column_names #rename columns
colnames(df2)
df2$species
#str_split(df2$species, " ")
#Split the column
df2<-df2 %>% separate(species, c("species","1","2","3"))
df2<-df2[-c(3,4,5)]
colnames(df2)
#Check Data Types
str(df2)
#Convert date
df2$date_egg<-as.POSIXct(df2$date_egg, format='%m/%d/%y')
df2$date_egg
df2<-read.csv("penguins_lter.csv")
colnames(df2) # Drop columns
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
column_names
colnames(df2)<-column_names #rename columns
colnames(df2)
df2$species
#str_split(df2$species, " ")
#Split the column
df2<-df2 %>% separate(species, c("species","1","2","3"))
df2<-df2[-c(3,4,5)]
colnames(df2)
#Check Data Types
str(df2)
#Convert date
df2$date_egg<-as.POSIXct(df2$date_egg, format='%m/%d/%y')
df2<-read.csv("penguins_lter.csv")
colnames(df2) # Drop columns
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
column_names
colnames(df2)<-column_names #rename columns
colnames(df2)
df2$species
#str_split(df2$species, " ")
#Split the column
df2<-df2 %>% separate(species, c("species","1","2","3"))
df2<-df2[-c(3,4,5)]
colnames(df2)
#Check Data Types
str(df2)
df2$date_egg
mdy(df2$date_egg)
library(lubridate)
mdy(df2$date_egg)
df2$date_egg
mdy(df2$date_egg)
df2$date_egg
mdy(df2$date_egg)
df2$date_egg<-as.POSIXct(df2$date_egg, format='%m/%d/%y')
df2$date_egg <- mdy(df2$date_egg)
df2$date_egg
df2<-read.csv("penguins_lter.csv")
colnames(df2) # Drop columns
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
column_names
colnames(df2)<-column_names #rename columns
colnames(df2)
df2$species
#str_split(df2$species, " ")
#Split the column
df2<-df2 %>% separate(species, c("species","1","2","3"))
df2<-df2[-c(3,4,5)]
colnames(df2)
#Check Data Types
str(df2)
#Convert date
library(lubridate)
#df2$date_egg<-as.POSIXct(df2$date_egg, format='%m/%d/%y')
df2$date_egg<-mdy(df2$date_egg)
df2$date_egg
#Check Data Types
str(df2)
min(df2$date_egg)
df2$date_egg-min(df2$date_egg)
df2$study_day<-df2$date_egg-min(df2$date_egg)
df2$study_day
is.na(df2)
complete_cases(df2)
complete.cases(df2)
is.na(df2$bill_length_mm)
df2<-complete.cases(df2)
df2 %>% group_by(sex) %>%
count()
df2 %>% group_by(sex) %>%
count()
head(df2)
df2<-read.csv("penguins_lter.csv")
colnames(df2) # Drop columns
df2<-df2[-c(2,4,6,7,17)]
column_names<-c('studyName', 'species','island','clutchCompletion', 'date_egg', 'bill_length_mm',
'bill_depth_mm','flipper_length_mm','body_mass_g','sex','delta_15','delta_13')
column_names
colnames(df2)<-column_names #rename columns
colnames(df2)
df2$species
#str_split(df2$species, " ")
#Split the column
df2<-df2 %>% separate(species, c("species","1","2","3"))
df2<-df2[-c(3,4,5)]
colnames(df2)
#Check Data Types
str(df2)
#Convert date
library(lubridate)
#df2$date_egg<-as.POSIXct(df2$date_egg, format='%m/%d/%y')
df2$date_egg<-mdy(df2$date_egg)
df2$study_day<-df2$date_egg-min(df2$date_egg)
#Get rid of incomplete cases
df2<-df2[complete.cases(df2), ]
df2 %>% group_by(sex) %>%
count()
subset(df2, sex!=".")
df2<-subset(df2, sex!=".")
df2 %>% group_by(sex) %>%
count()
write.csv(df2, "processed_penguins.csv")
write.csv(df2, "processed_penguins.csv", row.names=F)
df3<-read.csv("processed_penguins.csv")
head(df3)
colnames(df2)
#Plotting with R
ggplot(df2, aes(bill_length_mm, flipper_length_mm)) +
geom_point()
#Plotting with R
ggplot(df2, aes(bill_length_mm, flipper_length_mm, color=sex)) +
geom_point()
df2 %>% group_by(sex) %>%
count()
df2<-subset(df2, sex!="")
df2 %>% group_by(sex) %>%
count()
ggplot(df2, aes(bill_length_mm, flipper_length_mm, color=sex)) +
geom_point()
ggplot(df2, aex(bill_length_mm)) +
geom_boxplot()
ggplot(df2, aes(bill_length_mm)) +
geom_boxplot()
ggplot(df2, aes(bill_length_mm)) +
geom_boxplot() + coord_flip()
ggplot(df2, aes(study_day))+
geom_smooth()
ggplot(data=df2) +
geom_smooth(mapping=aes(x=study_day))
ggplot(data=df2) +
geom_smooth(mapping=aes(x=flipper_length_mm, bill_length_mm))
ggplot(data=df2) +
geom_line(mapping=aes(x=flipper_length_mm, bill_length_mm))
df2 %>% group_by(species) %>%
count()
df2 %>% group_by(species) %>%
count() %>% ggplot(data=species) + geom_bar(mapping=aes(x=species))
df2 %>% group_by(species) %>%
count() %>% ggplot(data=df2) + geom_bar(mapping=aes(x=species))
df2 %.>% group_by(species) %.>%
count() %>% ggplot(., aes(x=species)) + geom_bar()
df2 %.>% group_by(species) %.>%
count() %.>% ggplot(., aes(x=species)) + geom_bar()
mycounts<-df2 %>% group_by(species) %>%
count()
mycounts
ggplot(data=mycounts, aex=(x=species))
ggplot(data=mycounts, aex=(x=species)) +
geom_bar()
ggplot(data=mycounts, aes=(x=species)) +
geom_bar()
ggplot(data=mycounts, aes=(x=species))
+geom_bar()
ggplot(data=mycounts, aes=(x=species)) +
geom_bar()
ggplot(data=mycounts, aes(x=species)) +
geom_bar()
ggtitle("Bar Chart")
ggplot(data=mycounts, aes(x=species)) +
geom_bar() +
ggtitle("Bar Chart")
ggplot(data=df2) +
geom_smooth(mapping=aes(x=flipper_length_mm, bill_length_mm)) +
ggtitle("My Line Chart")
ggplot(data=df2) +
geom_smooth(mapping=aes(x=flipper_length_mm, bill_length_mm)) +
ggtitle("My Line Chart") + labs(x="Flipper", y="Bill")
#Plotting with R
ggplot(df2, aes(bill_length_mm, flipper_length_mm, color=sex)) +
geom_point() + labs(x="Bill Length", y="Flipper Length")
#Plotting with R
ggplot(df2, aes(bill_length_mm, flipper_length_mm, color=sex)) +
geom_point() + labs(x="Bill Length", y="Flipper Length") +
ggitle("Bill Length vs Flipper Length")
#Plotting with R
ggplot(df2, aes(bill_length_mm, flipper_length_mm, color=sex)) +
geom_point() + labs(x="Bill Length", y="Flipper Length") +
ggtitle("Bill Length vs Flipper Length")
clear
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(lubridate)
#read in data set
df<-read.csv("penguins_size.csv")
head(df)
setwd("~/Documents/DS160/r_examples")
getwd()
#read in data set
df<-read.csv("penguins_size.csv", sep=",")
head(df)
tail(df)
#subsetting data  (4,5,6,7,8,9,0)
df[c('species', 'sex')]
head(df)
#subsetting data  (4,5,6,7,8,9,0)
df[c('species', 'flipper_length_mm')]
df[0:2,3:5]
#subseting into new data frames
FEMALE<-df[which (df$sex=='FEMALE'),]
MALE<-df[which (df$sex=='MALE'),]
nrow(df)
#subseting into new data frames
FEMALE<-df[which (df$sex=='FEMALE')]
#subseting into new data frames
FEMALE<-df[which (df$sex=='FEMALE'),]
MALE<-df[which (df$sex=='MALE'),]
summary(df)
summary(df$culmen_depth_mm)
summary(df)
mean(df$body_mass_g)
mean(df$body_mass_g, na.rm=TRUE)
colMeans(df, na.rm=TRUE)
colMeans(df[sapply(df, is.numeric)],na.rm=TRUE)
sample_n(df, size=10)
df %>% group_by(species) %>%
count()
df %>% group_by(sex) %>%
count()
df2<-read.csv("penguins_lter.csv")
colnames(df2)
df2<-df2[-c(2,4,6,7,17)] # Drop columns
df2<-read.csv("penguins_lter.csv")
colnames(df2)
df2<-df2[-c(2,4,6,7,17)] # Drop columns
